{
	"info": {
		"_postman_id": "219c3acf-2de8-4c1a-9a28-6016d9e0d780",
		"name": "Album",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31319589"
	},
	"item": [
		{
			"name": "Crear un álbum nuevo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response time is less than 500ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"pm.test(\"Response is an object with properties\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an('object');",
							"    pm.expect(jsonData).to.have.property('nombre');",
							"    pm.expect(jsonData).to.have.property('descripcion');",
							"    pm.expect(jsonData).to.have.property('fecha_lanzamiento');",
							"    pm.expect(jsonData).to.have.property('caratula');",
							"    pm.expect(jsonData).to.have.property('id');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"Fuego artificiales\",\n    \"descripcion\": \"Este bonito álbum es el segundo de la discografía de Las Ligas Menores.\",\n    \"fecha_lanzamiento\": \"2019-12-10\",\n    \"caratula\": \"www.llm.com/foto\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/v1/albums/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"albums",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "No crear un álbum con descripción vacía",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 412\", function () {",
							"    pm.response.to.have.status(412);",
							"});",
							"",
							"pm.test(\"Response is an object with statusCode property\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('statusCode');",
							"});",
							"",
							"pm.test(\"Response is an object with message property\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('message');",
							"});",
							"",
							"pm.test(\"Response message is 'La descripción del álbum no puede estar vacía'\", function () {",
							"    var responseJSON = pm.response.json();",
							"    pm.expect(responseJSON.message).to.equal(\"La descripción del álbum no puede estar vacía\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"Fuego artificiales\",\n    \"descripcion\": \"\",\n    \"fecha_lanzamiento\": \"2019-12-10\",\n    \"caratula\": \"www.llm.com/foto\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/v1/albums/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"albums",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "No crear un álbum con nombre vacío",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 412\", function () {",
							"    pm.response.to.have.status(412);",
							"});",
							"",
							"pm.test(\"Response is an object with statusCode property\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('statusCode');",
							"});",
							"",
							"pm.test(\"Response is an object with message property\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('message');",
							"});",
							"",
							"pm.test(\"Response message is 'El nombre del álbum no puede estar vacío'\", function () {",
							"    var responseJSON = pm.response.json();",
							"    pm.expect(responseJSON.message).to.equal(\"El nombre del álbum no puede estar vacío\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"\",\n    \"descripcion\": \"Este bonito álbum es el segundo de la discografía de Las Ligas Menores.\",\n    \"fecha_lanzamiento\": \"2019-12-10\",\n    \"caratula\": \"www.llm.com/foto\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/v1/albums/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"albums",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener todos los álbumes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response is an array\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('array');",
							"});",
							"",
							"pm.test(\"Each element in the array has an id property\", function () {",
							"    pm.response.json().forEach(function(album) {",
							"        pm.expect(album).to.have.property('id');",
							"    });",
							"});",
							"",
							"pm.test(\"Each element in the array has a nombre property\", function () {",
							"    pm.response.json().forEach(function(album) {",
							"        pm.expect(album).to.have.property('nombre');",
							"    });",
							"});",
							"",
							"pm.test(\"Each element in the array has a caratula property\", function () {",
							"    pm.response.json().forEach(function(album) {",
							"        pm.expect(album).to.have.property('caratula');",
							"    });",
							"});",
							"",
							"pm.test(\"Each element in the array has a fecha_lanzamiento property\", function () {",
							"    pm.response.json().forEach(function(album) {",
							"        pm.expect(album).to.have.property('fecha_lanzamiento');",
							"    });",
							"});",
							"",
							"pm.test(\"Each element in the array has a descripcion property\", function () {",
							"    pm.response.json().forEach(function(album) {",
							"        pm.expect(album).to.have.property('descripcion');",
							"    });",
							"});",
							"",
							"pm.test(\"Each element in the array has a performers property\", function () {",
							"    pm.response.json().forEach(function(album) {",
							"        pm.expect(album).to.have.property('performers');",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/albums/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"albums",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener álbum por id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 500ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"pm.test(\"Response is an object with id property\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('id');",
							"});",
							"",
							"pm.test(\"Response is an object with nombre property\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('nombre');",
							"});",
							"",
							"pm.test(\"Response is an object with caratula property\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('caratula');",
							"});",
							"",
							"pm.test(\"Response is an object with fecha_lanzamiento property\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('fecha_lanzamiento');",
							"});",
							"",
							"pm.test(\"Response is an object with descripcion property\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('descripcion');",
							"});",
							"",
							"pm.test(\"Response is an object with performers property\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('performers');",
							"});",
							"",
							"pm.test(\"Response is an object with tracks property\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('tracks');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/albums/:albumId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"albums",
						":albumId"
					],
					"variable": [
						{
							"key": "albumId",
							"value": "7cc6ef74-db80-4439-985c-0bb170306057"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "No obtener álbum si id no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 404\", function () {",
							"  pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Response has a statusCode property\", function () {",
							"  pm.expect(pm.response.json()).to.have.property('statusCode');",
							"});",
							"",
							"pm.test(\"Response has a message property\", function () {",
							"  pm.expect(pm.response.json()).to.have.property('message');",
							"});",
							"",
							"pm.test(\"The message property equals 'El álbum con el id dado no fue encontrado'\", function () {",
							"  pm.expect(pm.response.json().message).to.eql('El álbum con el id dado no fue encontrado');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/albums/:albumId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"albums",
						":albumId"
					],
					"variable": [
						{
							"key": "albumId",
							"value": "00000000-0000-0000-0000-000000000000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar un álbum",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/albums/:albumId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"albums",
						":albumId"
					],
					"variable": [
						{
							"key": "albumId",
							"value": "d5cde358-0a09-43a3-b838-ca8d05cf992f"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "No eliminar álbum con tracks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Response is an object with statusCode and message properties\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an('object').that.has.all.keys('statusCode', 'message');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/albums/:albumId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"albums",
						":albumId"
					],
					"variable": [
						{
							"key": "albumId",
							"value": "0dba3301-03c3-4cb9-8a91-eb927537de55"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "No eliminar álbum que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Response is an object with statusCode and message properties\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an('object').that.has.all.keys('statusCode', 'message');",
							"});",
							"",
							"pm.test(\"Response message is equal to 'El álbum con el id dado no fue encontrado'\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.equal(\"El álbum con el id dado no fue encontrado\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/albums/:albumId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"albums",
						":albumId"
					],
					"variable": [
						{
							"key": "albumId",
							"value": "00000000-0000-0000-0000-000000000000"
						}
					]
				}
			},
			"response": []
		}
	]
}