{
	"info": {
		"_postman_id": "ebef2fbb-985c-4d91-ab08-1b18ca527f39",
		"name": "Performer-Album",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31319589"
	},
	"item": [
		{
			"name": "Agregar performer a album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response is an object with id property\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('id');",
							"});",
							"",
							"pm.test(\"Response is an object with nombre property\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('nombre');",
							"});",
							"",
							"pm.test(\"Response is an object with caratula property\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('caratula');",
							"});",
							"",
							"pm.test(\"Response is an object with fecha_lanzamiento property\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('fecha_lanzamiento');",
							"});",
							"",
							"pm.test(\"Response is an object with descripcion property\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('descripcion');",
							"});",
							"",
							"pm.test(\"Response is an object with performers property\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('performers');",
							"});",
							"",
							"pm.test(\"Response is an object with tracks property\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('tracks');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/performers/:performerId/albums/:albumId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"performers",
						":performerId",
						"albums",
						":albumId"
					],
					"variable": [
						{
							"key": "performerId",
							"value": "c81dfb23-8c75-47bc-b5f7-b908d7c56585"
						},
						{
							"key": "albumId",
							"value": "f6016862-5afd-4f40-8052-82742180900b"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "No agregar performer a album que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 404\", function () {",
							"  pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Response has statusCode property\", function () {",
							"  pm.expect(pm.response.json()).to.have.property('statusCode');",
							"});",
							"",
							"pm.test(\"Response has message property\", function () {",
							"  pm.expect(pm.response.json()).to.have.property('message');",
							"});",
							"",
							"pm.test(\"The message property is equal to 'El album con el id dado no fue encontrado'\", function () {",
							"  pm.expect(pm.response.json().message).to.equal(\"El album con el id dado no fue encontrado\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/performers/:performerId/albums/:albumId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"performers",
						":performerId",
						"albums",
						":albumId"
					],
					"variable": [
						{
							"key": "performerId",
							"value": "c81dfb23-8c75-47bc-b5f7-b908d7c56585"
						},
						{
							"key": "albumId",
							"value": "00000000-0000-0000-0000-000000000000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "No agregar performer que no existe a album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 404\", function () {",
							"  pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Response body has statusCode property\", function () {",
							"  pm.expect(pm.response.json()).to.have.property('statusCode');",
							"});",
							"",
							"pm.test(\"Response body has message property\", function () {",
							"  pm.expect(pm.response.json()).to.have.property('message');",
							"});",
							"",
							"pm.test(\"The value of message is 'El performer con el id dado no fue encontrado'\", function () {",
							"  pm.expect(pm.response.json().message).to.equal(\"El performer con el id dado no fue encontrado\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/performers/:performerId/albums/:albumId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"performers",
						":performerId",
						"albums",
						":albumId"
					],
					"variable": [
						{
							"key": "performerId",
							"value": "00000000-0000-0000-0000-000000000000"
						},
						{
							"key": "albumId",
							"value": "f6016862-5afd-4f40-8052-82742180900b"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "No agregar performer porque album ya tiene 3 performers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 412\", function () {",
							"  pm.response.to.have.status(412);",
							"});",
							"",
							"pm.test(\"Response has a statusCode property\", function () {",
							"  pm.expect(pm.response.json()).to.have.property('statusCode');",
							"});",
							"",
							"pm.test(\"Response has a message property with value 'El album no puede tener más de 3 performers asociados'\", function () {",
							"  pm.expect(pm.response.json().message).to.equal(\"El album no puede tener más de 3 performers asociados\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/v1/performers/:performerId/albums/:albumId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"performers",
						":performerId",
						"albums",
						":albumId"
					],
					"variable": [
						{
							"key": "performerId",
							"value": "c5430390-850e-4796-bc28-9f47eabb3c84"
						},
						{
							"key": "albumId",
							"value": "f6016862-5afd-4f40-8052-82742180900b"
						}
					]
				}
			},
			"response": []
		}
	]
}